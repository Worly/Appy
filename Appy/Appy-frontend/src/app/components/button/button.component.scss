:host {
    display: inline-block;
}

.my-button {
    display: inline-flex;
    align-items: center;
    gap: 4px;

    overflow: auto;

    position: relative;

    width: 100%;
    height: 100%;

    font-size: 1rem;

    &:not(.icon-only) {
        padding: 6px 15px;
    }
    &.icon-only {
        padding: 0px;
    }

    cursor: pointer;

    -webkit-touch-callout: none;
    -webkit-user-select: none;
    user-select: none;

    &:focus {
        outline: none;
        box-shadow: inset 0 0 4px rgb(var(--rgb-focus-outline));
    }

    &:not(.my-disabled) {
        transition: box-shadow 0.1s;
        &::before {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            opacity: 0;

            transition: opacity 0.1s;
        }
        &:hover::before {
            background-color: rgb(var(--rgb-text));
            opacity: 0.08;
        }
        &:active::before {
            background-color: rgb(var(--rgb-text));
            opacity: 0.15;
        }

        &:active {
            box-shadow: inset 0 1px 6px -1px rgba(var(--rgb-text), 0.5);
        }
    }

    --border-radius: var(--default-border-radius);
    --inside-border-radius: calc(var(--default-border-radius) - var(--border-width));
}

.curved.circle {
    --border-radius: 1000px;
    --inside-border-radius: 1000px;
}

.curved {
    border-radius: var(--border-radius);
    &::before {
        border-radius: var(--border-radius);
    }

    &.look-outlined::before {
        border-radius: var(--inside-border-radius);
    }
}

.curved-top-left {
    border-top-left-radius: var(--border-radius);
    &::before {
        border-top-left-radius: var(--border-radius);
    }

    &.look-outlined::before {
        border-top-left-radius: var(--inside-border-radius);
    }
}

.curved-top-right {
    border-top-right-radius: var(--border-radius);
    &::before {
        border-top-right-radius: var(--border-radius);
    }

    &.look-outlined::before {
        border-top-right-radius: var(--inside-border-radius);
    }
}

.curved-bottom-left {
    border-bottom-left-radius: var(--border-radius);
    &::before {
        border-bottom-left-radius: var(--border-radius);
    }

    &.look-outlined::before {
        border-bottom-left-radius: var(--inside-border-radius);
    }
}

.curved-bottom-right {
    border-bottom-right-radius: var(--border-radius);
    &::before {
        border-bottom-right-radius: var(--border-radius);
    }

    &.look-outlined::before {
        border-bottom-right-radius: var(--inside-border-radius);
    }
}

.color {
    &-success {
        background-color: rgb(var(--rgb-success));
        color: rgb(var(--rgb-success));
        border-color: rgb(var(--rgb-success));
    }
    &-danger {
        background-color: rgb(var(--rgb-danger));
        color: rgb(var(--rgb-danger));
        border-color: rgb(var(--rgb-danger));
    }
    &-warning {
        background-color: rgb(var(--rgb-warning));
        color: rgb(var(--rgb-warning));
        border-color: rgb(var(--rgb-warning));
    }
    &-normal {
        background-color: rgb(var(--rgb-normal));
        color: rgb(var(--rgb-normal));
        border-color: rgb(var(--rgb-input-border));
    }
    &-inherit {
        background-color: inherit;
        color: inherit;
        border-color: inherit;
    }
}

.my-disabled {
    background-color: rgb(var(--rgb-disabled));
    color: rgb(var(--rgb-disabled));
    border-color: rgb(var(--rgb-disabled));
}

.look {
    &-solid {
        &.color {
            &-success {
                color: rgb(var(--rgb-text-on-success));
            }
            &-danger {
                color: rgb(var(--rgb-text-on-danger));
            }
            &-warning {
                color: rgb(var(--rgb-text-on-warning));
            }
            &-normal {
                color: rgb(var(--rgb-text-on-normal));
            }
            &-inherit {
                color: inherit;
            }
        }
        border-width: 0px;
    }
    &-outlined {
        background-color: rgb(var(--rgb-input-background));
        border-width: var(--border-width);
    }
    &-normal {
        background-color: rgb(var(--rgb-input-background));
        border-width: 0px;
    }
    &-transparent {
        background-color: transparent;
        border-width: 0px;
    }
    &-custom {
        background-color: var(--custom-button-color);
        color: var(--custom-text-color);
        border-width: var(--border-width);
        border-color: var(--custom-border-color);
    }
}

.border {
    &-solid {
        border-style: solid;
    }
    &-dashed {
        border-style: dashed;
    }
    &-dotted {
        border-style: dotted;
    }
    &-double {
        border-style: double;
    }
}

.align {
    &-left {
        justify-content: left;
    }
    &-center {
        justify-content: center;
    }
    &-right {
        justify-content: right;
    }
}

.text-align {
    &-left {
        text-align: left;
    }
    &-center {
        text-align: center;
    }
    &-right {
        text-align: right;
    }
}

.icon-placement {
    &-left {
        flex-direction: row;
    }
    &-right {
        flex-direction: row-reverse;
    }
}

.my-icon {
    vertical-align: middle;
}

.my-button.icon-only > .my-icon {
    margin: 4px 6px;
}
